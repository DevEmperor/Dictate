name: Build APK on Release

on:
  release:
    types: [published]
  workflow_dispatch:  # Permet de dÃ©clencher manuellement le workflow

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create google-services.json (placeholder)
      run: |
        mkdir -p app/
        echo '{
          "project_info": {
            "project_number": "placeholder",
            "project_id": "placeholder"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "placeholder",
                "android_client_info": {
                  "package_name": "net.devemperor.dictate"
                }
              },
              "api_key": [
                {
                  "current_key": "placeholder"
                }
              ]
            }
          ]
        }' > app/google-services.json
        
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Get APK path
      id: apk_path
      run: |
        APK_PATH=$(find app/build/outputs/apk/release -name "*.apk" | head -1)
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        APK_NAME=$(basename "$APK_PATH")
        echo "apk_name=$APK_NAME" >> $GITHUB_OUTPUT
        
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.apk_path.outputs.apk_path }}
        asset_name: dictate-${{ github.event.release.tag_name }}.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: dictate-apk
        path: ${{ steps.apk_path.outputs.apk_path }}
        retention-days: 30
